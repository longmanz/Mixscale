% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enrichment_test.R
\name{rbo_enrich_test}
\alias{rbo_enrich_test}
\title{Rank biased overlap (RBO) based enrichment test}
\usage{
rbo_enrich_test(
  input_list,
  go_term_db,
  p,
  n_iter = 500,
  k = 300,
  side = c("top", "bottom"),
  mid = NULL,
  uneven.lengths = TRUE,
  empirical_test = FALSE,
  seed = 131415926
)
}
\arguments{
\item{input_list}{input gene list from user (a named vector)}

\item{go_term_db}{a list object of multiple gene-ontology (GO) terms to run enrichment test against}

\item{p}{Weighting parameter in [0, 1]. High p implies strong emphasis on top ranked elements}

\item{n_iter}{the number of iteration to perform the permutation to obtain the P-values of the enrichment test}

\item{k}{Evaluation depth for extrapolation}

\item{side}{Evaluate similarity between the top or the bottom of the ranked lists}

\item{mid}{Set the mid point to for example only consider positive or negative scores}

\item{uneven.lengths}{Indicator if lists have uneven lengths}

\item{empirical_test}{a boolen value to tell the function is an empirical test should be performed. If TRUE,
the exact empirical proportion of the permutated elements that are greater than the true RBO 
is returned as the p-value (high accuracy usually requires a large n_iter, e.g., 1000). If FALSE, then a standard 
Z-score test is applied to the RBO based on the mean and standard deviation of all the permuated elements (less accurate 
but more efficient. A small n_iter is usually enough (e.g., 100 or 200) to get good approximation compared to 
the true empirical test).}
}
\value{
a data.frame consists of rbo measurement between the inptu gene list and all the GO terms, 
as well as the P-values based on permutation. Please note that the P-values indicate whether the rank of the input gene
list and the GO-term gene set are consistent or not. It does NOT indicate if RBO is significantly different from 0.
}
\description{
To perform enrichment test based on rank biased overlap and permutation.
}
